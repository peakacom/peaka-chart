{{- if $.Values.temporal.enabled }}
{{- if $.Values.temporal.server.enabled }}
{{- range $service := (list "frontend" "history" "matching" "worker") }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ include "peaka.temporal.componentname" (list $ $service) }}-config"
  labels:
    app.kubernetes.io/name: {{ include "peaka.temporal.name" $ }}
    helm.sh/chart: {{ include "peaka.chart" $ }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/version: {{ $.Chart.AppVersion | replace "+" "_" }}
    app.kubernetes.io/part-of: {{ $.Chart.Name }}
data:
  config_template.yaml: |-
    log:
      stdout: true
      level: {{ $.Values.temporal.server.config.logLevel | quote }}

    persistence:
      defaultStore: {{ $.Values.temporal.server.config.persistence.defaultStore }}
    {{- if or $.Values.temporal.elasticsearch.enabled $.Values.temporal.elasticsearch.external }}
      visibilityStore: es-visibility
    {{- else }}
      visibilityStore: visibility
    {{- end }}
      numHistoryShards: {{ $.Values.temporal.server.config.numHistoryShards }}
      datastores:
        {{- with $.Values.temporal.server.config.persistence.additionalStores }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        default:
          {{- if eq (include "peaka.temporal.persistence.driver" (list $ "default")) "cassandra" }}
          cassandra:
            hosts: "{{ include "peaka.temporal.persistence.cassandra.hosts" (list $ "default") }}"
            port: {{ include "peaka.temporal.persistence.cassandra.port" (list $ "default") }}
            password: "{{ `{{ .Env.TEMPORAL_STORE_PASSWORD }}` }}"
            {{- with (omit $.Values.temporal.server.config.persistence.default.cassandra "hosts" "port" "password" "existingSecret") }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- with $.Values.temporal.server.config.persistence.default.faultInjection}}
          faultInjection:
              {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if eq (include "peaka.temporal.persistence.driver" . ) "sql" }}
          sql:
            pluginName: "postgres12"
            driverName: "postgres12"
            databaseName: "temporal"
            connectAddr: {{ include "peaka.postgresql.host" $ }}:{{ include "peaka.postgresql.port" $ }}
            connectProtocol: "tcp"
            user: {{ include "peaka.postgresql.user" $ }}
            password: {{ include "peaka.postgresql.password" $ }}
            {{- with (omit $.Values.temporal.server.config.persistence.default.sql "driver" "driverName" "host" "port" "connectAddr" "connectProtocol" "database" "databaseName" "user" "password" "existingSecret") }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
        visibility:
          {{- if eq (include "peaka.temporal.persistence.driver" . ) "sql" }}
          sql:
            pluginName: "postgres12"
            driverName: "postgres12"
            databaseName: "temporal_visibility"
            connectAddr: {{ include "peaka.postgresql.host" $ }}:{{ include "peaka.postgresql.port" $ }}
            connectProtocol: "tcp"
            user: {{ include "peaka.postgresql.user" $ }}
            password: {{ include "peaka.postgresql.password" $ }}
            {{- with (omit $.Values.temporal.server.config.persistence.visibility.sql "driver" "driverName" "host" "port" "connectAddr" "connectProtocol" "database" "databaseName" "user" "password" "existingSecret") }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}

        {{- if or $.Values.temporal.elasticsearch.enabled $.Values.temporal.elasticsearch.external }}
        es-visibility:
            elasticsearch:
                version: "{{ $.Values.temporal.elasticsearch.version }}"
                url:
                    scheme: "{{ $.Values.temporal.elasticsearch.scheme }}"
                    host: "{{ $.Values.temporal.elasticsearch.host }}:{{ $.Values.temporal.elasticsearch.port }}"
                username: "{{ $.Values.temporal.elasticsearch.username }}"
                password: "{{ $.Values.temporal.elasticsearch.password }}"
                logLevel: "{{ $.Values.temporal.elasticsearch.logLevel }}"
                indices:
                    visibility: "{{ $.Values.temporal.elasticsearch.visibilityIndex }}"
        {{- end }}

    global:
      membership:
        name: temporal
        maxJoinDuration: 30s
        broadcastAddress: {{ `{{ default .Env.POD_IP "0.0.0.0" }}` }}

      pprof:
        port: 7936

      metrics:
        tags:
          type: {{ $service }}
          {{- with $.Values.temporal.server.metrics.tags }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- if $.Values.temporal.server.config.prometheus }}
        prometheus:
          {{- with $.Values.temporal.server.config.prometheus }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- else }}
        prometheus:
          timerType: histogram
          listenAddress: "0.0.0.0:9090"
        {{- end }}

      {{- if $.Values.temporal.server.config.tls }}
      tls:
        {{- with $.Values.temporal.server.config.tls }}
        {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- end }}

    services:
      frontend:
        rpc:
          grpcPort: {{ include "peaka.temporal.frontend.grpcPort" $ }}
          membershipPort: {{ include "peaka.temporal.frontend.membershipPort" $ }}
          bindOnIP: "0.0.0.0"

      history:
        rpc:
          grpcPort: {{ include "peaka.temporal.history.grpcPort" $ }}
          membershipPort: {{ include "peaka.temporal.history.membershipPort" $ }}
          bindOnIP: "0.0.0.0"

      matching:
        rpc:
          grpcPort: {{ include "peaka.temporal.matching.grpcPort" $ }}
          membershipPort: {{ include "peaka.temporal.matching.membershipPort" $ }}
          bindOnIP: "0.0.0.0"

      worker:
        rpc:
          grpcPort: {{ include "peaka.temporal.worker.grpcPort" $ }}
          membershipPort: {{ include "peaka.temporal.worker.membershipPort" $ }}
          bindOnIP: "0.0.0.0"

    {{- if $.Values.temporal.server.config.clusterMetadata }}
    clusterMetadata:
    {{- with $.Values.temporal.server.config.clusterMetadata }}
    {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- else }}
    clusterMetadata:
      enableGlobalDomain: false
      failoverVersionIncrement: 10
      masterClusterName: "active"
      currentClusterName: "active"
      clusterInformation:
        active:
          enabled: true
          initialFailoverVersion: 1
          rpcName: "temporal-frontend"
          rpcAddress: "127.0.0.1:7933"
    {{- end }}

    {{- if $.Values.temporal.server.config.dcRedirectionPolicy }}
    dcRedirectionPolicy:
    {{- with $.Values.temporal.server.config.dcRedirectionPolicy }}
    {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- else }}
    dcRedirectionPolicy:
      policy: "noop"
      toDC: ""
    {{- end }}

    {{- if $.Values.temporal.server.archival }}
    archival:
    {{- with $.Values.temporal.server.archival }}
    {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- else }}
    archival:
      status: "disabled"
    {{- end }}

    {{- if $.Values.temporal.server.namespaceDefaults }}
    namespaceDefaults:
    {{- with $.Values.temporal.server.namespaceDefaults }}
    {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- else }}

    {{- end }}

    publicClient:
      hostPort: "{{ include "peaka.temporal.componentname" (list $ "frontend") }}:{{ $.Values.temporal.server.frontend.service.port }}"

    dynamicConfigClient:
      filepath: "/etc/temporal/dynamic_config/dynamic_config.yaml"
      pollInterval: "10s"
---

{{- end }}
{{- end }}
{{- end }}
